// <auto-generated />
using System;
using AmtOrk.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AmtOrk.Server.Migrations
{
    [DbContext(typeof(AmtOrkContext))]
    partial class AmtOrkContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.13");

            modelBuilder.Entity("AmtOrk.Server.Models.AmtUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CorporaQualified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HeraldryPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRestricted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSuspended")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsWaivered")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ParkMemberSince")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PasswordExpires")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PersonaName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReeveQualified")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AmtUser");
                });

            modelBuilder.Entity("AmtOrk.Server.Models.Classes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClassName")
                        .IsUnique();

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassName = "Anti-Paladin"
                        },
                        new
                        {
                            Id = 2,
                            ClassName = "Archer"
                        },
                        new
                        {
                            Id = 3,
                            ClassName = "Assassin"
                        },
                        new
                        {
                            Id = 4,
                            ClassName = "Barbarian"
                        },
                        new
                        {
                            Id = 5,
                            ClassName = "Bard"
                        },
                        new
                        {
                            Id = 6,
                            ClassName = "Color"
                        },
                        new
                        {
                            Id = 7,
                            ClassName = "Druid"
                        },
                        new
                        {
                            Id = 8,
                            ClassName = "Healer"
                        },
                        new
                        {
                            Id = 9,
                            ClassName = "Monk"
                        },
                        new
                        {
                            Id = 10,
                            ClassName = "Monster"
                        },
                        new
                        {
                            Id = 11,
                            ClassName = "Paladin"
                        },
                        new
                        {
                            Id = 12,
                            ClassName = "Peasant"
                        },
                        new
                        {
                            Id = 13,
                            ClassName = "Reeve"
                        },
                        new
                        {
                            Id = 14,
                            ClassName = "Scout"
                        },
                        new
                        {
                            Id = 15,
                            ClassName = "Warrior"
                        },
                        new
                        {
                            Id = 16,
                            ClassName = "Wizard"
                        });
                });

            modelBuilder.Entity("AmtOrk.Server.Models.Credit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AmtUserId")
                        .HasColumnType("TEXT");

                    b.Property<int>("CreditClassId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CreditCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("CreditDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("CreditEventId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CreditKingdomId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CreditParkId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AmtUserId");

                    b.ToTable("Credit");
                });

            modelBuilder.Entity("AmtOrk.Server.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EventDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EventEndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("EventLocation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EventStartDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("KingdomId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LandId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("KingdomId");

                    b.HasIndex("LandId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("AmtOrk.Server.Models.Kingdom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChampionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("GMRId")
                        .HasColumnType("TEXT");

                    b.Property<string>("KingdomDesciption")
                        .HasColumnType("TEXT");

                    b.Property<string>("KingdomName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MonarchId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PrimeMinisterId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RegentId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChampionId");

                    b.HasIndex("GMRId");

                    b.HasIndex("KingdomName")
                        .IsUnique();

                    b.HasIndex("MonarchId");

                    b.HasIndex("PrimeMinisterId");

                    b.HasIndex("RegentId");

                    b.ToTable("Kingdom");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KingdomName = "13 Roads"
                        },
                        new
                        {
                            Id = 2,
                            KingdomName = "Kingdom of Desert Winds"
                        },
                        new
                        {
                            Id = 3,
                            KingdomName = "The Celestial Kingdom"
                        },
                        new
                        {
                            Id = 4,
                            KingdomName = "The Empire of Rivermoor"
                        },
                        new
                        {
                            Id = 5,
                            KingdomName = "The Empire of the Iron Mountains"
                        },
                        new
                        {
                            Id = 6,
                            KingdomName = "The Freeholds of Amtgard"
                        },
                        new
                        {
                            Id = 7,
                            KingdomName = "The Kingdom of Blackspire"
                        },
                        new
                        {
                            Id = 8,
                            KingdomName = "The Kingdom of Burning Lands"
                        },
                        new
                        {
                            Id = 9,
                            KingdomName = "The Kingdom of Crystal Groves"
                        },
                        new
                        {
                            Id = 10,
                            KingdomName = "The Kingdom of Dragonspine"
                        },
                        new
                        {
                            Id = 11,
                            KingdomName = "The Kingdom of Goldenvale"
                        },
                        new
                        {
                            Id = 12,
                            KingdomName = "The Kingdom of Neverwinter"
                        },
                        new
                        {
                            Id = 13,
                            KingdomName = "The Kingdom of Northern Lights"
                        },
                        new
                        {
                            Id = 14,
                            KingdomName = "The Kingdom of Northreach"
                        },
                        new
                        {
                            Id = 15,
                            KingdomName = "The Kingdom of Polaris"
                        },
                        new
                        {
                            Id = 16,
                            KingdomName = "The Kingdom of Tal Dagore"
                        },
                        new
                        {
                            Id = 17,
                            KingdomName = "The Kingdom of the Emerald Hills"
                        },
                        new
                        {
                            Id = 18,
                            KingdomName = "The Kingdom of the Golden Plains"
                        },
                        new
                        {
                            Id = 19,
                            KingdomName = "The Kingdom of the Nine Blades"
                        },
                        new
                        {
                            Id = 20,
                            KingdomName = "The Kingdom of the Rising Winds"
                        },
                        new
                        {
                            Id = 21,
                            KingdomName = "The Kingdom of the Wetlands"
                        },
                        new
                        {
                            Id = 22,
                            KingdomName = "The Kingdom of Viridian Outlands"
                        },
                        new
                        {
                            Id = 23,
                            KingdomName = "The Kingdom of Westmarch"
                        },
                        new
                        {
                            Id = 24,
                            KingdomName = "The Kingdom of Winters Edge"
                        });
                });

            modelBuilder.Entity("AmtOrk.Server.Models.Land", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChampionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("GMRId")
                        .HasColumnType("TEXT");

                    b.Property<int>("KingdomId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LandDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LandLocation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LandName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MonarchId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PrimeMinisterId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RegentId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChampionId");

                    b.HasIndex("GMRId");

                    b.HasIndex("KingdomId");

                    b.HasIndex("MonarchId");

                    b.HasIndex("PrimeMinisterId");

                    b.HasIndex("RegentId");

                    b.ToTable("Land");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KingdomId = 13,
                            LandDescription = "Blade's Edge meets three times a week:\nTuesday @ 4:00pm -Fighter Practice\nFriday @ 4:00pm - Fighter Practice\nSaturday @ 1:00pm -Park Day",
                            LandLocation = "2729 Jackson Ave SE, Port Orchard, WA 98366, USA",
                            LandName = "Blade's Edge"
                        },
                        new
                        {
                            Id = 2,
                            KingdomId = 13,
                            LandDescription = "",
                            LandLocation = "",
                            LandName = "Dragons of Fire Valley"
                        },
                        new
                        {
                            Id = 3,
                            KingdomId = 13,
                            LandDescription = "",
                            LandLocation = "",
                            LandName = "Greenwood Keep"
                        },
                        new
                        {
                            Id = 4,
                            KingdomId = 13,
                            LandDescription = "",
                            LandLocation = "",
                            LandName = "Inland Ocean"
                        },
                        new
                        {
                            Id = 5,
                            KingdomId = 13,
                            LandDescription = "",
                            LandLocation = "",
                            LandName = "Lost Cove"
                        },
                        new
                        {
                            Id = 6,
                            KingdomId = 13,
                            LandDescription = "",
                            LandLocation = "",
                            LandName = "Mithril Hills"
                        },
                        new
                        {
                            Id = 7,
                            KingdomId = 13,
                            LandDescription = "",
                            LandLocation = "",
                            LandName = "Oceans Alley"
                        },
                        new
                        {
                            Id = 8,
                            KingdomId = 13,
                            LandDescription = "",
                            LandLocation = "",
                            LandName = "Seaside Keep"
                        },
                        new
                        {
                            Id = 9,
                            KingdomId = 13,
                            LandDescription = "",
                            LandLocation = "",
                            LandName = "Shrouding Mist"
                        },
                        new
                        {
                            Id = 10,
                            KingdomId = 13,
                            LandDescription = "",
                            LandLocation = "",
                            LandName = "The Hollow"
                        },
                        new
                        {
                            Id = 11,
                            KingdomId = 13,
                            LandDescription = "",
                            LandLocation = "",
                            LandName = "Three Lakes"
                        });
                });

            modelBuilder.Entity("AmtOrk.Server.Models.Credit", b =>
                {
                    b.HasOne("AmtOrk.Server.Models.AmtUser", null)
                        .WithMany("Credits")
                        .HasForeignKey("AmtUserId");
                });

            modelBuilder.Entity("AmtOrk.Server.Models.Event", b =>
                {
                    b.HasOne("AmtOrk.Server.Models.Kingdom", null)
                        .WithMany("KingdomEvents")
                        .HasForeignKey("KingdomId");

                    b.HasOne("AmtOrk.Server.Models.Land", null)
                        .WithMany("LandEvents")
                        .HasForeignKey("LandId");
                });

            modelBuilder.Entity("AmtOrk.Server.Models.Kingdom", b =>
                {
                    b.HasOne("AmtOrk.Server.Models.AmtUser", "Champion")
                        .WithMany()
                        .HasForeignKey("ChampionId");

                    b.HasOne("AmtOrk.Server.Models.AmtUser", "GMR")
                        .WithMany()
                        .HasForeignKey("GMRId");

                    b.HasOne("AmtOrk.Server.Models.AmtUser", "Monarch")
                        .WithMany()
                        .HasForeignKey("MonarchId");

                    b.HasOne("AmtOrk.Server.Models.AmtUser", "PrimeMinister")
                        .WithMany()
                        .HasForeignKey("PrimeMinisterId");

                    b.HasOne("AmtOrk.Server.Models.AmtUser", "Regent")
                        .WithMany()
                        .HasForeignKey("RegentId");

                    b.Navigation("Champion");

                    b.Navigation("GMR");

                    b.Navigation("Monarch");

                    b.Navigation("PrimeMinister");

                    b.Navigation("Regent");
                });

            modelBuilder.Entity("AmtOrk.Server.Models.Land", b =>
                {
                    b.HasOne("AmtOrk.Server.Models.AmtUser", "Champion")
                        .WithMany()
                        .HasForeignKey("ChampionId");

                    b.HasOne("AmtOrk.Server.Models.AmtUser", "GMR")
                        .WithMany()
                        .HasForeignKey("GMRId");

                    b.HasOne("AmtOrk.Server.Models.Kingdom", null)
                        .WithMany("Lands")
                        .HasForeignKey("KingdomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmtOrk.Server.Models.AmtUser", "Monarch")
                        .WithMany()
                        .HasForeignKey("MonarchId");

                    b.HasOne("AmtOrk.Server.Models.AmtUser", "PrimeMinister")
                        .WithMany()
                        .HasForeignKey("PrimeMinisterId");

                    b.HasOne("AmtOrk.Server.Models.AmtUser", "Regent")
                        .WithMany()
                        .HasForeignKey("RegentId");

                    b.Navigation("Champion");

                    b.Navigation("GMR");

                    b.Navigation("Monarch");

                    b.Navigation("PrimeMinister");

                    b.Navigation("Regent");
                });

            modelBuilder.Entity("AmtOrk.Server.Models.AmtUser", b =>
                {
                    b.Navigation("Credits");
                });

            modelBuilder.Entity("AmtOrk.Server.Models.Kingdom", b =>
                {
                    b.Navigation("KingdomEvents");

                    b.Navigation("Lands");
                });

            modelBuilder.Entity("AmtOrk.Server.Models.Land", b =>
                {
                    b.Navigation("LandEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
